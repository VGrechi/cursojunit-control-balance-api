/*
 * This file is generated by jOOQ.
*/
package com.cursojunit.controlbalanceapi.models.entities.public_.tables;


import com.cursojunit.controlbalanceapi.models.entities.public_.Keys;
import com.cursojunit.controlbalanceapi.models.entities.public_.Public;
import com.cursojunit.controlbalanceapi.models.entities.public_.tables.records.BalanceRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Balance extends TableImpl<BalanceRecord> {

    private static final long serialVersionUID = -1670515633;

    /**
     * The reference instance of <code>PUBLIC.BALANCE</code>
     */
    public static final Balance BALANCE = new Balance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BalanceRecord> getRecordType() {
        return BalanceRecord.class;
    }

    /**
     * The column <code>PUBLIC.BALANCE.BALANCEID</code>.
     */
    public final TableField<BalanceRecord, Integer> BALANCEID = createField("BALANCEID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_EFEA157F_6A7A_4887_A677_F87429AC6FE0)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.BALANCE.ORDERID</code>.
     */
    public final TableField<BalanceRecord, Integer> ORDERID = createField("ORDERID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.BALANCE.BALANCEVALUE</code>.
     */
    public final TableField<BalanceRecord, BigDecimal> BALANCEVALUE = createField("BALANCEVALUE", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * Create a <code>PUBLIC.BALANCE</code> table reference
     */
    public Balance() {
        this("BALANCE", null);
    }

    /**
     * Create an aliased <code>PUBLIC.BALANCE</code> table reference
     */
    public Balance(String alias) {
        this(alias, BALANCE);
    }

    private Balance(String alias, Table<BalanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Balance(String alias, Table<BalanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BalanceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Balance as(String alias) {
        return new Balance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Balance rename(String name) {
        return new Balance(name, null);
    }
}
