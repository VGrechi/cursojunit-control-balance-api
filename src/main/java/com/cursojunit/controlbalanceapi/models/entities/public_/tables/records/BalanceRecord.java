/*
 * This file is generated by jOOQ.
*/
package com.cursojunit.controlbalanceapi.models.entities.public_.tables.records;


import com.cursojunit.controlbalanceapi.models.entities.public_.tables.Balance;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BalanceRecord extends TableRecordImpl<BalanceRecord> implements Record3<Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1796467068;

    /**
     * Setter for <code>PUBLIC.BALANCE.BALANCEID</code>.
     */
    public void setBalanceid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE.BALANCEID</code>.
     */
    public Integer getBalanceid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.BALANCE.ORDERID</code>.
     */
    public void setOrderid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE.ORDERID</code>.
     */
    public Integer getOrderid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.BALANCE.BALANCEVALUE</code>.
     */
    public void setBalancevalue(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.BALANCE.BALANCEVALUE</code>.
     */
    public BigDecimal getBalancevalue() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Balance.BALANCE.BALANCEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Balance.BALANCE.ORDERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Balance.BALANCE.BALANCEVALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBalanceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOrderid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getBalancevalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value1(Integer value) {
        setBalanceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value2(Integer value) {
        setOrderid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value3(BigDecimal value) {
        setBalancevalue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord values(Integer value1, Integer value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BalanceRecord
     */
    public BalanceRecord() {
        super(Balance.BALANCE);
    }

    /**
     * Create a detached, initialised BalanceRecord
     */
    public BalanceRecord(Integer balanceid, Integer orderid, BigDecimal balancevalue) {
        super(Balance.BALANCE);

        set(0, balanceid);
        set(1, orderid);
        set(2, balancevalue);
    }
}
